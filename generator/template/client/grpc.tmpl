// Autogenerated by application-generator

package client

import (
	generated "application-emulator/src/generated"
	generated_model "application-model/generated"
	"context"

	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

func CallGeneratedEndpoint(ctx context.Context, cc grpc.ClientConnInterface, service, endpoint string, in *generated_model.Request, options ...grpc.CallOption) (*generated_model.Response, error) {
	switch service {
	{{ range . }}
	case "{{ .Name }}": 
		client := generated.New{{ goname .Name }}Client(cc)
		switch endpoint {
		{{ range .Endpoints }}
		case "{{ .Name }}":
			return client.{{ goname .Name }}(ctx, in, options...)
		{{ end }}
		}
	{{ end }}
	}

	return nil, status.Error(codes.InvalidArgument, "unknown service, endpoint combination")
}